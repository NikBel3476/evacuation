name: test

on: [push]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: build-${{ matrix.platform }}
    environment: test
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-20.04, ubuntu-22.04, windows-2019, windows-2022, macos-11, macos-12]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install dependencies (ubuntu only)
        if: contains(matrix.platform, 'ubuntu')
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev patchelf \
          libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb \
          webkit2gtk-driver

      # - name: Setup Edge WebDriver
      #   if: contains(matrix.platform, 'windows')
      #   shell: pwsh
      #   run: |
      #     Invoke-WebRequest https://msedgedriver.azureedge.net/115.0.1901.188/edgedriver_win64.zip -OutFile C:\edgedriver_win64.zip
      #     Expand-Archive C:\edgedriver_win64.zip -DestinationPath C:\edgedriver_win64
      #     $env:Path += ';C:\edgedriver_win64'

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          key: ${{ matrix.platform }}

      - name: Install grcov
        run: cargo install grcov

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm' # Set this to npm, yarn or pnpm.

      - name: Install app web dependencies
        run: npm ci # Change this to npm, yarn or pnpm.

      - name: Check formatting
        run: npm run format:check:all

      # - name: Linting
      #   run: npm run lint:all

      - name: Lint CSS
        run: npm run lint:css

      - name: Run web tests
        run: npm run test

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Rust tests
        run: cargo test

      - name: Run xtask coverage
        uses: actions-rs/cargo@v1
        with:
          command: xtask
          args: coverage

      - name: Run webdriverio tests (Ubuntu and Windows)
        if: contains(matrix.platform, 'ubuntu') || contains(matrix.platform, 'windows')
        run: npm run test:wdio

      - name: Run cypress tests (ubuntu)
        uses: cypress-io/github-action@v5
        if: contains(matrix.platform, 'ubuntu')
        with:
          start: npm run start-server
          browser: firefox
          cache-key: ${{ matrix.platform }}-${{ runner.os }}-hash-${{ hashFiles('package-lock.json') }}

      - name: Run cypress tests (windows and macos)
        uses: cypress-io/github-action@v5
        if: contains(matrix.platform, 'windows') || contains(matrix.platform, 'macos')
        with:
            start: npm run start-server
            browser: edge
            cache-key: ${{ matrix.platform }}-${{ runner.os }}-hash-${{ hashFiles('package-lock.json') }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/*.lcov
